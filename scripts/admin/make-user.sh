#!/bin/bash
NAME=$(whiptail --inputbox "Please enter the name of the user you'd like to make" 10 100 3>&1 1>&2 2>&3)
if [[ $NAME == "" ]];
then
	echo "Failure"
	/ssh_hub/scripts/main_menu.sh
	exit 500;
fi
# Hub System; Requires a SSH Key to be generated out of users control, and put that on nodes. Does require a key anyway to authenticate to hub.
# No Hub; User specifies a key, and that's used.
usehub=false
if whiptail --yesno "Would you like this user to use the Hub System?" 10 100;
then
	mkdir -p /ssh_hub/keys
	ssh-keygen -b 2048 -t rsa -f /ssh_hub/keys/$NAME -q -N ""
	chmod a+rx /ssh_hub/keys/$NAME
	PUB_KEY_NODE=$(cat /ssh_hub/keys/$NAME.pub)
	cp /ssh_hub/keys/$NAME.pub /srv/salt/prod/$NAME.ssh.pub
	usehub=true
fi

# Have user input the key, for either general auth, or hub auth.
PUB_KEY=$(whiptail --inputbox "Enter a Public Key generated by the User (If no hub, for general auth. If hub, for hub auth.)" 10 100 3>&1 1>&2 2>&3)
if [[ $PUB_KEY == "" ]];
then
	echo "Failure"
	rm -rf /ssh_hub/keys/$NAME
	rm -rf /ssh_hub/keys/$NAME.pub
	exit 500;
fi

clear
pass=$(echo $RANDOM | md5sum | head -c 16)
if [[ $usehub == true ]];
then
	echo "- Create User (HUB)"
	useradd $NAME
	echo "- Apply PUB Key (HUB)"
	mkdir -p /home/$NAME
	cd /home/$NAME/
	mkdir -p .ssh
	cd .ssh
	echo $PUB_KEY > authorized_keys
	echo "- Changing Permissions (HUB)"
	chown $NAME:$NAME /home/$NAME/.ssh
	chmod 700 /home/$NAME/.ssh
	chown $NAME:$NAME /home/$NAME/.ssh/authorized_keys
	chmod 600 /home/$NAME/.ssh/authorized_keys
	echo "- Gen Password (HUB)"
	chpasswd <<<"$NAME:$pass"
	echo "- Changing Shell (HUB)"
	chsh $NAME -s /ssh_hub/shells/hub_user.shell
	echo "- Restart SSHD"
	systemctl restart sshd
	echo ""
	echo " --- HUB COMPLETE --- "
	echo ""
fi
echo "- Create User (BACKEND)"
salt '*' user.add $NAME
salt '*' user.chhome $NAME /home/$NAME True
salt '*' user.chshell $NAME /bin/bash
echo "- Apply PUB Key (BACKEND)"
salt '*' cmd.run "mkdir -p /home/$NAME/.ssh"
if [[ $usehub == true ]];
then
	salt '*' ssh.set_auth_key_from_file $NAME salt://$NAME.ssh.pub
else
	salt '*' cmd.run "echo $PUB_KEY > /home/$NAME/.ssh/authorized_keys"
fi
echo "- Gen Password (BACKEND)"
salt '*' cmd.run "echo '$pass\n$pass' | passwd $NAME"
